name: Deploy Backend Dev
on:
  push:
    branches:
      - "project_[0-9]-dev"
jobs:
  deploy:
    name: Deploy Backend Dev
    runs-on: ubuntu-22.04
    concurrency: deploy-group    # optional: ensure only one action runs at a time      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          echo "Installing libvips"
          sudo apt install -y libvips libvips-tools

      - name: Build Backend
        env:
          ATLAS_URI: ${{ secrets.ATLAS_URI }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          ADMIN_S3_REGION: ${{ vars.ADMIN_S3_REGION }}
          ADMIN_S3_ACCESS_KEY_ID: ${{ secrets.ADMIN_S3_ACCESS_KEY_ID }}
          ADMIN_S3_SECRET_ACCESS_KEY: ${{ secrets.ADMIN_S3_SECRET_ACCESS_KEY }}
          ADMIN_S3_BUCKET: ${{ secrets.ADMIN_S3_BUCKET }}
          USER_S3_REGION: ${{ vars.USER_S3_REGION }}
          USER_S3_ACCESS_KEY_ID: ${{ secrets.USER_S3_ACCESS_KEY_ID }}
          USER_S3_SECRET_ACCESS_KEY: ${{ secrets.USER_S3_SECRET_ACCESS_KEY }}
          USER_S3_BUCKET: ${{ secrets.USER_S3_BUCKET }}
          API_AUDIENCE: "http://localhost:3000/"
          ISSUER_BASE_URL: ${{ vars.ISSUER_BASE_URL }}
          NODE_VERSION: ${{ vars.NODE_VERSION }}
          NVM_DIR: /root/.nvm
        run: |
          export NODE_ENV=production
          cd backend
          echo "HOSTNAME=trek-dev.wyfx.ca" >> .env
          echo "ATLAS_URI=$ATLAS_URI" >> .env
          echo "PAYLOAD_SECRET=$PAYLOAD_SECRET" >> .env
          echo "ADMIN_S3_REGION=$ADMIN_S3_REGION" >> .env
          echo "ADMIN_S3_ACCESS_KEY_ID=$ADMIN_S3_ACCESS_KEY_ID" >> .env
          echo "ADMIN_S3_SECRET_ACCESS_KEY=$ADMIN_S3_SECRET_ACCESS_KEY" >> .env
          echo "ADMIN_S3_BUCKET=$ADMIN_S3_BUCKET" >> .env
          echo "USER_S3_REGION=$USER_S3_REGION" >> .env
          echo "USER_S3_ACCESS_KEY_ID=$USER_S3_ACCESS_KEY_ID" >> .env
          echo "USER_S3_SECRET_ACCESS_KEY=$USER_S3_SECRET_ACCESS_KEY" >> .env
          echo "USER_S3_BUCKET=$USER_S3_BUCKET" >> .env
          echo "API_AUDIENCE=$API_AUDIENCE" >> .env
          echo "ISSUER_BASE_URL=$ISSUER_BASE_URL" >> .env
          npm install --platform=linux --arch=x64
          npm run build:prod
  
      - name: Upload to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.WYFX_HOST }}
          username: ${{ secrets.WYFX_USERNAME }}
          password: ${{ secrets.WYFX_PASSWORD }}
          port: ${{ secrets.WYFX_PORT }}
          source: "backend/dist/*,backend/src/*,backend/build/*,backend/.env,backend/package.json,backend/package-lock.json, backend/tsconfig.json"
          target: "api"
          overwrite: true
          strip_components: 1

      - name: Install
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.WYFX_HOST }}
          username: ${{ secrets.WYFX_USERNAME }}
          password: ${{ secrets.WYFX_PASSWORD }}
          port: ${{ secrets.WYFX_PORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd api
            npm install
